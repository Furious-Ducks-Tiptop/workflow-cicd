
server {
    
    listen 80;
    # change to ur domain
    server_name 85.31.239.78;
  
   gzip on;
    gzip_disable "msie6";
    gzip_vary on;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_buffers 16 8k;
    gzip_http_version 1.1;
    gzip_min_length 256;
    gzip_types
    application/atom+xml
    application/geo+json
    application/javascript
    application/x-javascript
    application/json
    application/ld+json
    application/manifest+json
    application/rdf+xml
    application/rss+xml
    application/xhtml+xml
    application/xml
    font/eot
    font/otf
    font/ttf
    image/svg+xml
    text/css
    text/javascript
    text/plain
    text/xml;
    
       

    location / {
        #see request_limit defined at ../nginx.conf to limit max request
        # limit_req zone=request_limit;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $http_host;
        proxy_set_header X-NginX-Proxy true;
        proxy_redirect off;
        set $frontend front:3000;
        proxy_pass http://$frontend;
        #proxy_connect_timeout 1s;
    }

    location ~ ^/api(/?)(.*) {
        # the default nginx dns resolver to keep nginx alive even when the server get down
        # resolver 127.0.0.11; 
        # see request_limit defined at ../nginx.conf to limit max request
        # see request_limit defined at ../nginx.conf to limit max request
       # see request_limit defined at ../nginx.conf to limit max request
       # limit_req zone=request_limit;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;
        proxy_set_header Host $http_host;
        proxy_set_header X-NginX-Proxy true;
        proxy_redirect off;

       # set $backend server:3000;
       set $backend api:8741;
        proxy_pass http://$backend/$2$1$is_args$args;
        # Working with socket io
        proxy_http_version 1.1;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_read_timeout 600s;
       # proxy_connect_timeout 1s;
   }


    # portainer /portainer/*
    location ~* ^/portainer/(.*)$ {
        # resolver 127.0.0.11 valid=30s;
        proxy_pass http://portainer:9000/$1$is_args$args;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_set_header Connection "";
        proxy_http_version 1.1;
    }
    
  
      
    # proxy pass portainer websocket 
    location ~ ^/portainer/api/websocket(/?)(.*) {
        # resolver 127.0.0.11 valid=30s;
        proxy_pass http://portainer:9000/api/websocket/$2;
        proxy_set_header Upgrade $http_upgrade;
        proxy_set_header Connection "upgrade";
        proxy_http_version 1.1;
    }


}






